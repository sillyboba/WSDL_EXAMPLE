
package com.example.bank;

/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

import java.io.File;
import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.jws.WebMethod;
import jakarta.jws.WebParam;
import jakarta.jws.WebResult;
import jakarta.jws.WebService;
import jakarta.jws.soap.SOAPBinding;
import jakarta.xml.bind.annotation.XmlSeeAlso;

/**
 * This class was generated by Apache CXF 4.0.3
 * 2025-09-23T16:51:21.867+03:00
 * Generated source version: 4.0.3
 *
 */
public final class BankServicePortType_BankServicePort_Client {

    private static final QName SERVICE_NAME = new QName("http://bank.example.com/", "BankService");

    private BankServicePortType_BankServicePort_Client() {
    }

    public static void main(String args[]) throws java.lang.Exception {
        URL wsdlURL = BankService.WSDL_LOCATION;
        if (args.length > 0 && args[0] != null && !"".equals(args[0])) {
            File wsdlFile = new File(args[0]);
            try {
                if (wsdlFile.exists()) {
                    wsdlURL = wsdlFile.toURI().toURL();
                } else {
                    wsdlURL = new URL(args[0]);
                }
            } catch (MalformedURLException e) {
                e.printStackTrace();
            }
        }

        BankService ss = new BankService(wsdlURL, SERVICE_NAME);
        BankServicePortType port = ss.getBankServicePort();

        {
        System.out.println("Invoking transfer...");
        com.example.bank.TransferRequest _transfer_parameters = null;
        try {
            com.example.bank.TransferResponse _transfer__return = port.transfer(_transfer_parameters);
            System.out.println("transfer.result=" + _transfer__return);

        } catch (InsufficientFundsFault e) {
            System.out.println("Expected exception: insufficientFundsFault has occurred.");
            System.out.println(e.toString());
        } catch (AccountNotFoundFault e) {
            System.out.println("Expected exception: accountNotFoundFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking getTransactionHistory...");
        com.example.bank.GetTransactionHistoryRequest _getTransactionHistory_parameters = null;
        try {
            com.example.bank.GetTransactionHistoryResponse _getTransactionHistory__return = port.getTransactionHistory(_getTransactionHistory_parameters);
            System.out.println("getTransactionHistory.result=" + _getTransactionHistory__return);

        } catch (AccountNotFoundFault e) {
            System.out.println("Expected exception: accountNotFoundFault has occurred.");
            System.out.println(e.toString());
        }

            }
        {
        System.out.println("Invoking getAccount...");
        com.example.bank.GetAccountRequest _getAccount_parameters = null;
        try {
            com.example.bank.GetAccountResponse _getAccount__return = port.getAccount(_getAccount_parameters);
            System.out.println("getAccount.result=" + _getAccount__return);

        } catch (AccountNotFoundFault e) {
            System.out.println("Expected exception: accountNotFoundFault has occurred.");
            System.out.println(e.toString());
        }

            }

        System.exit(0);
    }

}
